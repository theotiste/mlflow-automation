name: MLflow Training & Deployment

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  recherche-model:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  

      - name: Installer Micromamba et créer l'environnement theo_env
        uses: mamba-org/setup-micromamba@v1
        with:
          micromamba-version: latest
          environment-name: theo_env
          create-args: python=3.9 pip

      - name: Installer les dépendances pour recherche-model
        run: |
          micromamba activate theo_env
          pip install -r requirements-rm.txt
          shell: bash -l {0}
          
      - name: Entraîner le modèle (Recherche Model)
        run: |
          micromamba activate theo_env
          python scripts/mlflow-loan-rm.py
        shell: bash -l {0}

  optimisation-model:
    runs-on: ubuntu-latest
    needs: recherche-model
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  
      - name: Install Micromamba
        uses: mamba-org/setup-micromamba@v1
        with:
          micromamba-version: latest
          environment-name: theo_env
          create-args: >-
            python=3.9

      - name: Installer les dépendances pour optimisation-model
        run: |
          micromamba activate theo_env
          pip install -r requirements-rm.txt
        shell: bash -l {0}

      - name: Entraîner le modèle (Optimisation Model)
        run: |
          micromamba activate theo_env
          python scripts/mlflow-loan-om.py
        shell: bash -l {0}
        
      - name: Enregistrer le modèle (Optimisation Model)
        run: |
          micromamba activate theo1_env
          python scripts/mlflow-loan-om.py
        shell: bash -l {0}

  mlflow-register:
    runs-on: ubuntu-latest
    needs: optimisation-model
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Micromamba
        uses: mamba-org/setup-micromamba@v1
        with:
          micromamba-version: latest
          environment-name: theo1_env
          create-args: >-
            python=3.9

      - name: Installer les dépendances pour l'enregistrement MLflow
        run: |
          micromamba activate theo1_env
          pip install -r requirements-register.txt
        shell: bash -l {0}

      - name: Enregistrer le modèle dans MLflow Registry
        run: |
          micromamba activate theo1_env
          python scripts/mlflow-loan-register.py
        shell: bash -l {0}

  arize-upload:
    runs-on: ubuntu-latest
    needs: mlflow-register
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  
      - name: Installer les dépendances Arize AI
        run: |
          micromamba activate theo1_env
          pip install arize
        shell: bash -l {0}

      - name: Envoyer le modèle MLflow à Arize AI
        run: |
          micromamba activate theo1_env
          python scripts/mlflow-arize.py
        shell: bash -l {0}   

    
  mlflow-results:
    runs-on: ubuntu-latest
    needs: arize-upload
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  
      - name: Install Micromamba
        uses: mamba-org/setup-micromamba@v1
        with:
          micromamba-version: latest
          environment-name: theo1_env
          create-args: >-
            python=3.9   
      - name: Activer theo1_env et vérifier MLflow
        run: |
          micromamba activate theo1_env
          pip list | grep mlflow || pip install mlflow
        shell: bash -l {0}

      - name: Exécuter mlflow-results.py
        run: |
          micromamba activate theo1_env
          python scripts/mlflow-results.py
        shell: bash -l {0}               

     
