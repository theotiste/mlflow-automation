name: MLflow Training & Deployment

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  recherche-model:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: mlflowpass
          POSTGRES_DB: mlflow_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Micromamba
        uses: mamba-org/setup-micromamba@v1
        with:
          micromamba-version: latest
          environment-name: theo_env
          create-args: >-
            python=3.9

      - name: Installer les dépendances pour recherche-model
        run: |
          micromamba activate theo_env
          pip install -r requirements-rm.txt
        shell: bash -l {0}

      - name: Entraîner le modèle (Recherche Model)
        run: |
          micromamba activate theo_env
          python scripts/mlflow-loan-rm.py
        shell: bash -l {0}

  optimisation-model:
    runs-on: ubuntu-latest
    needs: recherche-model
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: mlflowpass
          POSTGRES_DB: mlflow_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Micromamba
        uses: mamba-org/setup-micromamba@v1
        with:
          micromamba-version: latest
          environment-name: theo_env
          create-args: >-
            python=3.9

      - name: Installer les dépendances pour optimisation-model
        run: |
          micromamba activate theo_env
          pip install -r requirements-rm.txt
        shell: bash -l {0}

      - name: Entraîner le modèle (Optimisation Model)
        run: |
          micromamba activate theo_env
          python scripts/mlflow-loan-om.py
        shell: bash -l {0}
        
      - name: Enregistrer le modèle (Optimisation Model)
        run: |
          micromamba activate theo1_env
          python scripts/mlflow-loan-om.py
        shell: bash -l {0}


  mlflow-register:
    runs-on: ubuntu-latest
    needs: optimisation-model
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: mlflowpass
          POSTGRES_DB: mlflow_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Micromamba
        uses: mamba-org/setup-micromamba@v1
        with:
          micromamba-version: latest
          environment-name: theo1_env
          create-args: >-
            python=3.9

      - name: Installer les dépendances pour l'enregistrement MLflow
        run: |
          micromamba activate theo1_env
          pip install -r requirements-register.txt
        shell: bash -l {0}

      - name: Enregistrer le modèle dans MLflow Registry
        run: |
          micromamba activate theo1_env
          python scripts/mlflow-loan-register.py
        shell: bash -l {0}
        
  mlflow-results:
    runs-on: ubuntu-latest
    needs: mlflow-register  #  Exécute mlflow-results.py après l'enregistrement du modèle
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: mlflowpass
          POSTGRES_DB: mlflow_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Activer theo1_env (MLflow 2.20.2)
        run: |
          source ~/miniconda3/etc/profile.d/conda.sh
          conda activate theo1_env
          python scripts/mlflow-results.py
        shell: bash -l {0}
